<Window x:Class="CPD.Capture.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CPD.Capture"
        xmlns:Data="clr-namespace:CPD.Data;assembly=CPD.Data"
        mc:Ignorable="d" x:Name="TopWindow" WindowStartupLocation="Manual" WindowState="Maximized" Height="913" Width="1056" Loaded="Window_Loaded" >

    <Window.Resources>
        <Style TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Background"  Value="Yellow"/>
            <Setter Property="Width"  Value="30"/>
            <Setter Property="BorderBrush" Value="Red" />
            <Setter Property="BorderThickness"  Value="3" />
        </Style>

        <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonTemplate">
            <Border CornerRadius="8" BorderBrush="Blue" BorderThickness="2">
                <Grid>
                    <Rectangle Fill="Aquamarine" RadiusX="10" RadiusY="10"/>
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type Button}" >
            <Setter Property="Width" Value="120"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"

                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <CollectionViewSource x:Key="SurveyViewSource"/>
        <CollectionViewSource x:Key="ModuleViewSource" Source="{Binding Modules, Source={StaticResource SurveyViewSource}}"/>
        <CollectionViewSource x:Key="ArticleViewSource" Source="{Binding Articles, Source={StaticResource ModuleViewSource}}"/>
        <CollectionViewSource x:Key="QuestionViewSource" Source="{Binding Questions, Source={StaticResource ArticleViewSource}}"/>
        <CollectionViewSource x:Key="AnswerViewSource" Source="{Binding Answers, Source={StaticResource QuestionViewSource}}"/>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="CPDTabControl" Width="auto " Margin="10">
            <TabItem Header="Initialise and select">
                <Grid x:Name="GridInitialise" Margin="0,0,0,0" Width="auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="320"></RowDefinition>
                        <RowDefinition MinHeight="250"></RowDefinition>
                        <RowDefinition Height="120"></RowDefinition>
                        <RowDefinition Height="40"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="138"/>
                        <ColumnDefinition Width="460"/>
                        <ColumnDefinition Width="188"/>
                        <ColumnDefinition Width="254"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="SurveyDataGrid" AutoGenerateColumns="False" MinRowHeight="30" ItemsSource="{Binding Source={StaticResource SurveyViewSource}}"
                          Grid.Column="0" SelectionMode="Single" CanUserAddRows="False" CanUserDeleteRows="False" IsSynchronizedWithCurrentItem="True" 
                          Margin="0,15" Grid.ColumnSpan="2" SelectionChanged="SurveyDataGrid_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTextColumn  Binding="{Binding SurveyId}" Header="SurveyId" />

                            <DataGridTemplateColumn Header="Name" Width="200" CanUserSort="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Height="Auto" Margin="3" TextWrapping="Wrap">
                                            <TextBox.Text>
                                                <Binding Path="Naam" Mode="TwoWay" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn  Binding="{Binding IssueId}" Header="IssueId" Width="auto"/>
                            <DataGridTemplateColumn x:Name="expirationDateColumn" Header="Expiration date" Width="250" CanUserSort="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding ExpirationDate, UpdateSourceTrigger=PropertyChanged}" SelectedDateFormat="Long"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Column="2" Margin="10,10,0,0">
                        <Label Content="RTF file name"/>
                        <Label Content="Vertical advert URL"/>
                        <Label Content="Horisontal advert URL"/>
                        <Label Content="EBook URL"/>
                        <Label Content="Accreditation number"/>
                        <Label Content="CME publication"/>
                        <Label Content="CME issue"/>
                        <Label Content="URL"/>
                        <Label Content="Properties"/>

                        <Button x:Name="ButtonUpdateSurvey" Grid.Column="3" Height="20" Click="ButtonUpdateSurvey_Click">Update Survey</Button>
                        <Button x:Name="ButtonAddSurvey" Height="20" Click="ButtonAddSurvey_Click">Add Survey</Button>

                    </StackPanel>

                    <StackPanel DataContext="{StaticResource SurveyViewSource}"  Grid.Column="3"  Margin="0,10,10,0">
                        <TextBox Text="{Binding Path=RTFFileName}" Height="26"/>
                        <TextBox Text="{Binding Path=VerticalAdvertURL}" Height="26"/>
                        <TextBox Text="{Binding Path=HorisontalAdvertURL}" Height="26"/>
                        <TextBox Text="{Binding Path=EBookURL}" Height="26"/>
                        <TextBox Text="{Binding Path=AccreditationNumber}" Height="26"/>
                        <TextBox Text="{Binding Path=CMEPublication}" Height="26"/>
                        <TextBox Text="{Binding Path=CMEIssue}" Height="26"/>
                        <TextBox Text="{Binding Path=URL}" Height="26"/>
                        <ListBox x:Name="ListFacility" SelectedItem="{Binding Path=Facility, Mode=TwoWay}"  Height="100"/>



                        <!--<DockPanel Grid.Row="1" Grid.Column="2">
                        <Button x:Name="ButtonExit" DockPanel.Dock="Right" Height="40" Click="ButtonExit_Click">Exit without saving</Button>
                    </DockPanel>-->
                    </StackPanel>

                    <DataGrid x:Name="ModuleDataGrid" Grid.Row="1" AutoGenerateColumns="False" EnableRowVirtualization="True" 
                           ItemsSource="{Binding Source={StaticResource ModuleViewSource}}" RowDetailsVisibilityMode="VisibleWhenSelected"
                    Margin="0,0,0,0" IsSynchronizedWithCurrentItem="True" CanUserDeleteRows="True" SelectionUnit="FullRow" Grid.ColumnSpan="2" >
                        <DataGrid.Columns>


                            <DataGridTextColumn x:Name="moduleIdColumn" Binding="{Binding ModuleId}" Header="Module Id" Width="SizeToHeader"/>

                            <DataGridTextColumn  Binding="{Binding SurveyId}" Header="SurveyId" />

                            <DataGridTemplateColumn  Header="Name" Width="300" CanUserSort="True"  >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Height="Auto" Margin="3" TextWrapping="Wrap"  >
                                            <TextBox.Text>
                                                <Binding Path="Naam" NotifyOnValidationError="True" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="1" Grid.Column="2" Margin="10,0,0,0">
                        <Label Content="Passrate"/>
                        <Label Content="NormalPoints"/>
                        <Label Content="Ethics points"/>
                        <Label Content="Advert URL"/>
                        <Label Content="HorisontalAdvert URL"/>
                        <Label Content="EBook URL"/>

                        <Button x:Name="ButtonTest" Height="30" Click="ButtonTest_Click">Test</Button>


                    </StackPanel>
                    <Grid x:Name="ModuleGrid" Grid.Row="1" Grid.Column="3" DataContext="{StaticResource ModuleViewSource}" Margin="0,0,10,0">
                        <StackPanel>
                            <TextBox Text="{Binding Path=Passrate}" Height="26"/>
                            <TextBox Text="{Binding Path=NormalPoints}" Height="26"/>
                            <TextBox Text="{Binding Path=EthicsPoints}" Height="26"/>
                            <TextBox Text="{Binding Path=AdvertURL}" Height="26"/>
                            <TextBox Text="{Binding Path=HorisontalAdvertURL}" Height="26"/>
                            <TextBox Text="{Binding Path=EBookURL}" Height="26"/>
                        </StackPanel>
                    </Grid>


                    <DataGrid x:Name="ArticleDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" IsSynchronizedWithCurrentItem="True" Margin="0,10,10,0"
                           ItemsSource="{Binding Source={StaticResource ArticleViewSource}}" CanUserDeleteRows="True"  CanUserAddRows="True"
                           RowDetailsVisibilityMode="VisibleWhenSelected" MinRowHeight="30" Grid.Row="2"  Grid.ColumnSpan="4" SelectionUnit="FullRow">
                        <DataGrid.Columns>
                            <DataGridTextColumn  Binding="{Binding ArticleId}" Header="ArticleId" />
                            <DataGridTextColumn  Binding="{Binding ModuleId}" Header="ModuleId" />
                            <DataGridTextColumn x:Name="ArticleColumn" Binding="{Binding Naam}" Header="Article"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

            </TabItem>
            <TabItem Header="Capture">
                <Grid x:Name="GridCapture" Margin="0,0,0,0" Width="auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="400"></RowDefinition>
                        <RowDefinition MinHeight="200"></RowDefinition>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="42*"/>
                        <ColumnDefinition Width="451*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="493*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                        <DataGrid x:Name="QuestionDataGrid" Grid.Row="0" AutoGenerateColumns="False" EnableRowVirtualization="True" IsSynchronizedWithCurrentItem="True" Margin="0,10,0,0" 
                          RowDetailsVisibilityMode="VisibleWhenSelected"  ItemsSource ="{Binding Source={StaticResource QuestionViewSource}}" MinRowHeight="30" 
                              SelectionUnit="FullRow" CanUserDeleteRows="True" VerticalScrollBarVisibility="Visible" Height="350">
                            <DataGrid.Columns>
                                <DataGridTextColumn  Binding="{Binding QuestionId, Mode=TwoWay}" Header="QuestionId" />
                                <DataGridTextColumn  Binding="{Binding ArticleId, Mode=TwoWay}" Header="ArticleId" />
                                <DataGridTextColumn x:Name="numberWithinArticleColumn" Binding="{Binding NumberWithinArticle}" Header="Number" Width="60"/>

                                <DataGridTemplateColumn Header="Question" Width="*" CanUserSort="True"  >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Height="Auto" Margin="3" TextWrapping="Wrap">
                                                <TextBox.Text>
                                                    <Binding Path="Question1" NotifyOnValidationError="True"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.ColumnSpan="2">
                        <DataGrid x:Name="AnswerDataGrid"  AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="0,10,0,0" 
                          ItemsSource ="{Binding Source={StaticResource AnswerViewSource}}" CanUserDeleteRows="True"  SelectionUnit="FullRow"
                          MinRowHeight="30" IsSynchronizedWithCurrentItem="True" CanUserAddRows="True" VerticalScrollBarVisibility="Visible" Height="350">
                            <DataGrid.Columns>
                                <DataGridTextColumn  Binding="{Binding AnswerId}" Header="AnswerId" />
                                <DataGridTextColumn  Binding="{Binding QuestionId}" Header="QuestionId" />
                                <DataGridTemplateColumn Header="Answer" Width="*" CanUserSort="True"  >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Height="Auto" Margin="3" TextWrapping="Wrap">
                                                <TextBox.Text>
                                                    <Binding Path="Answer1" NotifyOnValidationError="True"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridCheckBoxColumn x:Name="correctColumn" Binding="{Binding Correct}" Header="Correct" Width="60" IsThreeState="False"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                    <GridSplitter Grid.Column="2" Grid.RowSpan="2" Background="Black"  ResizeBehavior="BasedOnAlignment" HorizontalAlignment="Stretch" Width="5" 
                                  ShowsPreview="True" ></GridSplitter>
                    <DockPanel Grid.Column="3" Grid.RowSpan="2">
                        <GroupBox Header="Rich text format document"  Grid.RowSpan="2" Width="auto" BorderThickness="5" BorderBrush="Gold">
                            <RichTextBox x:Name="gRichTextBox" VerticalScrollBarVisibility="Visible"></RichTextBox>
                        </GroupBox>
                    </DockPanel>
                </Grid>

            </TabItem>

        </TabControl>
    </Grid>
</Window>

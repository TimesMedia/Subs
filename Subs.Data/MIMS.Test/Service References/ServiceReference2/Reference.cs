//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MIMS.Test.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IActivator")]
    public interface IActivator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivator/Start", ReplyAction="http://tempuri.org/IActivator/StartResponse")]
        MIMS.Test.ServiceReference2.StartResponse Start(MIMS.Test.ServiceReference2.StartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IActivator/Start", ReplyAction="http://tempuri.org/IActivator/StartResponse")]
        System.IAsyncResult BeginStart(MIMS.Test.ServiceReference2.StartRequest request, System.AsyncCallback callback, object asyncState);
        
        MIMS.Test.ServiceReference2.StartResponse EndStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivator/AuthoriseCPDIssue", ReplyAction="http://tempuri.org/IActivator/AuthoriseCPDIssueResponse")]
        MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse AuthoriseCPDIssue(MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IActivator/AuthoriseCPDIssue", ReplyAction="http://tempuri.org/IActivator/AuthoriseCPDIssueResponse")]
        System.IAsyncResult BeginAuthoriseCPDIssue(MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request, System.AsyncCallback callback, object asyncState);
        
        MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse EndAuthoriseCPDIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivator/GetCustomerInfo", ReplyAction="http://tempuri.org/IActivator/GetCustomerInfoResponse")]
        MIMS.Test.ServiceReference2.GetCustomerInfoResponse GetCustomerInfo(MIMS.Test.ServiceReference2.GetCustomerInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IActivator/GetCustomerInfo", ReplyAction="http://tempuri.org/IActivator/GetCustomerInfoResponse")]
        System.IAsyncResult BeginGetCustomerInfo(MIMS.Test.ServiceReference2.GetCustomerInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        MIMS.Test.ServiceReference2.GetCustomerInfoResponse EndGetCustomerInfo(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Start", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Subs.Presentation.ServiceReference1.Jobs pJob;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pDirectoryPath;
        
        public StartRequest() {
        }
        
        public StartRequest(Subs.Presentation.ServiceReference1.Jobs pJob, string pDirectoryPath) {
            this.pJob = pJob;
            this.pDirectoryPath = pDirectoryPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartResponse {
        
        public StartResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthoriseCPDIssue", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthoriseCPDIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int CustomerId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int IssueId;
        
        public AuthoriseCPDIssueRequest() {
        }
        
        public AuthoriseCPDIssueRequest(int CustomerId, int IssueId) {
            this.CustomerId = CustomerId;
            this.IssueId = IssueId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthoriseCPDIssueResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthoriseCPDIssueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AuthoriseCPDIssueResult;
        
        public AuthoriseCPDIssueResponse() {
        }
        
        public AuthoriseCPDIssueResponse(bool AuthoriseCPDIssueResult) {
            this.AuthoriseCPDIssueResult = AuthoriseCPDIssueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCustomerInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int CustomerId;
        
        public GetCustomerInfoRequest() {
        }
        
        public GetCustomerInfoRequest(int CustomerId) {
            this.CustomerId = CustomerId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCustomerInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Subs.Presentation.ServiceReference1.CustomerInfo GetCustomerInfoResult;
        
        public GetCustomerInfoResponse() {
        }
        
        public GetCustomerInfoResponse(Subs.Presentation.ServiceReference1.CustomerInfo GetCustomerInfoResult) {
            this.GetCustomerInfoResult = GetCustomerInfoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActivatorChannel : MIMS.Test.ServiceReference2.IActivator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MIMS.Test.ServiceReference2.StartResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MIMS.Test.ServiceReference2.StartResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthoriseCPDIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthoriseCPDIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MIMS.Test.ServiceReference2.GetCustomerInfoResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MIMS.Test.ServiceReference2.GetCustomerInfoResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivatorClient : System.ServiceModel.ClientBase<MIMS.Test.ServiceReference2.IActivator>, MIMS.Test.ServiceReference2.IActivator {
        
        private BeginOperationDelegate onBeginStartDelegate;
        
        private EndOperationDelegate onEndStartDelegate;
        
        private System.Threading.SendOrPostCallback onStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthoriseCPDIssueDelegate;
        
        private EndOperationDelegate onEndAuthoriseCPDIssueDelegate;
        
        private System.Threading.SendOrPostCallback onAuthoriseCPDIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerInfoDelegate;
        
        private EndOperationDelegate onEndGetCustomerInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerInfoCompletedDelegate;
        
        public ActivatorClient() {
        }
        
        public ActivatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<StartCompletedEventArgs> StartCompleted;
        
        public event System.EventHandler<AuthoriseCPDIssueCompletedEventArgs> AuthoriseCPDIssueCompleted;
        
        public event System.EventHandler<GetCustomerInfoCompletedEventArgs> GetCustomerInfoCompleted;
        
        public MIMS.Test.ServiceReference2.StartResponse Start(MIMS.Test.ServiceReference2.StartRequest request) {
            return base.Channel.Start(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStart(MIMS.Test.ServiceReference2.StartRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStart(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MIMS.Test.ServiceReference2.StartResponse EndStart(System.IAsyncResult result) {
            return base.Channel.EndStart(result);
        }
        
        private System.IAsyncResult OnBeginStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MIMS.Test.ServiceReference2.StartRequest request = ((MIMS.Test.ServiceReference2.StartRequest)(inValues[0]));
            return this.BeginStart(request, callback, asyncState);
        }
        
        private object[] OnEndStart(System.IAsyncResult result) {
            MIMS.Test.ServiceReference2.StartResponse retVal = this.EndStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartCompleted(object state) {
            if ((this.StartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartCompleted(this, new StartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartAsync(MIMS.Test.ServiceReference2.StartRequest request) {
            this.StartAsync(request, null);
        }
        
        public void StartAsync(MIMS.Test.ServiceReference2.StartRequest request, object userState) {
            if ((this.onBeginStartDelegate == null)) {
                this.onBeginStartDelegate = new BeginOperationDelegate(this.OnBeginStart);
            }
            if ((this.onEndStartDelegate == null)) {
                this.onEndStartDelegate = new EndOperationDelegate(this.OnEndStart);
            }
            if ((this.onStartCompletedDelegate == null)) {
                this.onStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartCompleted);
            }
            base.InvokeAsync(this.onBeginStartDelegate, new object[] {
                        request}, this.onEndStartDelegate, this.onStartCompletedDelegate, userState);
        }
        
        public MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse AuthoriseCPDIssue(MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request) {
            return base.Channel.AuthoriseCPDIssue(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthoriseCPDIssue(MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthoriseCPDIssue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse EndAuthoriseCPDIssue(System.IAsyncResult result) {
            return base.Channel.EndAuthoriseCPDIssue(result);
        }
        
        private System.IAsyncResult OnBeginAuthoriseCPDIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request = ((MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest)(inValues[0]));
            return this.BeginAuthoriseCPDIssue(request, callback, asyncState);
        }
        
        private object[] OnEndAuthoriseCPDIssue(System.IAsyncResult result) {
            MIMS.Test.ServiceReference2.AuthoriseCPDIssueResponse retVal = this.EndAuthoriseCPDIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthoriseCPDIssueCompleted(object state) {
            if ((this.AuthoriseCPDIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthoriseCPDIssueCompleted(this, new AuthoriseCPDIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthoriseCPDIssueAsync(MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request) {
            this.AuthoriseCPDIssueAsync(request, null);
        }
        
        public void AuthoriseCPDIssueAsync(MIMS.Test.ServiceReference2.AuthoriseCPDIssueRequest request, object userState) {
            if ((this.onBeginAuthoriseCPDIssueDelegate == null)) {
                this.onBeginAuthoriseCPDIssueDelegate = new BeginOperationDelegate(this.OnBeginAuthoriseCPDIssue);
            }
            if ((this.onEndAuthoriseCPDIssueDelegate == null)) {
                this.onEndAuthoriseCPDIssueDelegate = new EndOperationDelegate(this.OnEndAuthoriseCPDIssue);
            }
            if ((this.onAuthoriseCPDIssueCompletedDelegate == null)) {
                this.onAuthoriseCPDIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthoriseCPDIssueCompleted);
            }
            base.InvokeAsync(this.onBeginAuthoriseCPDIssueDelegate, new object[] {
                        request}, this.onEndAuthoriseCPDIssueDelegate, this.onAuthoriseCPDIssueCompletedDelegate, userState);
        }
        
        public MIMS.Test.ServiceReference2.GetCustomerInfoResponse GetCustomerInfo(MIMS.Test.ServiceReference2.GetCustomerInfoRequest request) {
            return base.Channel.GetCustomerInfo(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomerInfo(MIMS.Test.ServiceReference2.GetCustomerInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MIMS.Test.ServiceReference2.GetCustomerInfoResponse EndGetCustomerInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MIMS.Test.ServiceReference2.GetCustomerInfoRequest request = ((MIMS.Test.ServiceReference2.GetCustomerInfoRequest)(inValues[0]));
            return this.BeginGetCustomerInfo(request, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerInfo(System.IAsyncResult result) {
            MIMS.Test.ServiceReference2.GetCustomerInfoResponse retVal = this.EndGetCustomerInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerInfoCompleted(object state) {
            if ((this.GetCustomerInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerInfoCompleted(this, new GetCustomerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerInfoAsync(MIMS.Test.ServiceReference2.GetCustomerInfoRequest request) {
            this.GetCustomerInfoAsync(request, null);
        }
        
        public void GetCustomerInfoAsync(MIMS.Test.ServiceReference2.GetCustomerInfoRequest request, object userState) {
            if ((this.onBeginGetCustomerInfoDelegate == null)) {
                this.onBeginGetCustomerInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerInfo);
            }
            if ((this.onEndGetCustomerInfoDelegate == null)) {
                this.onEndGetCustomerInfoDelegate = new EndOperationDelegate(this.OnEndGetCustomerInfo);
            }
            if ((this.onGetCustomerInfoCompletedDelegate == null)) {
                this.onGetCustomerInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerInfoDelegate, new object[] {
                        request}, this.onEndGetCustomerInfoDelegate, this.onGetCustomerInfoCompletedDelegate, userState);
        }
    }
}

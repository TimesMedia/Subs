#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPD2.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CPD2")]
	public partial class ModuleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSurvey2(Survey2 instance);
    partial void UpdateSurvey2(Survey2 instance);
    partial void DeleteSurvey2(Survey2 instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertAnswer(Answer instance);
    partial void UpdateAnswer(Answer instance);
    partial void DeleteAnswer(Answer instance);
    #endregion
		
		public ModuleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Survey2> Survey2s
		{
			get
			{
				return this.GetTable<Survey2>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<Answer> Answers
		{
			get
			{
				return this.GetTable<Answer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Survey2")]
	public partial class Survey2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SurveyId;
		
		private string _Naam;
		
		private System.DateTime _ExpirationDate;
		
		private string _Facility;
		
		private string _XMLFileName;
		
		private string _VerticalAdvertURL;
		
		private string _HorisontalAdvertURL;
		
		private string _EBookURL;
		
		private int _IssueId;
		
		private string _AccreditationNumber;
		
		private string _CMEPublication;
		
		private string _CMEIssue;
		
		private string _URL;
		
		private EntitySet<Module> _Modules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSurveyIdChanging(int value);
    partial void OnSurveyIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnExpirationDateChanging(System.DateTime value);
    partial void OnExpirationDateChanged();
    partial void OnFacilityChanging(string value);
    partial void OnFacilityChanged();
    partial void OnRTFFileNameChanging(string value);
    partial void OnRTFFileNameChanged();
    partial void OnVerticalAdvertURLChanging(string value);
    partial void OnVerticalAdvertURLChanged();
    partial void OnHorisontalAdvertURLChanging(string value);
    partial void OnHorisontalAdvertURLChanged();
    partial void OnEBookURLChanging(string value);
    partial void OnEBookURLChanged();
    partial void OnIssueIdChanging(int value);
    partial void OnIssueIdChanged();
    partial void OnAccreditationNumberChanging(string value);
    partial void OnAccreditationNumberChanged();
    partial void OnCMEPublicationChanging(string value);
    partial void OnCMEPublicationChanged();
    partial void OnCMEIssueChanging(string value);
    partial void OnCMEIssueChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public Survey2()
		{
			this._Modules = new EntitySet<Module>(new Action<Module>(this.attach_Modules), new Action<Module>(this.detach_Modules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SurveyId
		{
			get
			{
				return this._SurveyId;
			}
			set
			{
				if ((this._SurveyId != value))
				{
					this.OnSurveyIdChanging(value);
					this.SendPropertyChanging();
					this._SurveyId = value;
					this.SendPropertyChanged("SurveyId");
					this.OnSurveyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(80)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="Date NOT NULL")]
		public System.DateTime ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(20)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this.OnFacilityChanging(value);
					this.SendPropertyChanging();
					this._Facility = value;
					this.SendPropertyChanged("Facility");
					this.OnFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLFileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RTFFileName
		{
			get
			{
				return this._XMLFileName;
			}
			set
			{
				if ((this._XMLFileName != value))
				{
					this.OnRTFFileNameChanging(value);
					this.SendPropertyChanging();
					this._XMLFileName = value;
					this.SendPropertyChanged("RTFFileName");
					this.OnRTFFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalAdvertURL", DbType="NVarChar(50)")]
		public string VerticalAdvertURL
		{
			get
			{
				return this._VerticalAdvertURL;
			}
			set
			{
				if ((this._VerticalAdvertURL != value))
				{
					this.OnVerticalAdvertURLChanging(value);
					this.SendPropertyChanging();
					this._VerticalAdvertURL = value;
					this.SendPropertyChanged("VerticalAdvertURL");
					this.OnVerticalAdvertURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HorisontalAdvertURL", DbType="NVarChar(50)")]
		public string HorisontalAdvertURL
		{
			get
			{
				return this._HorisontalAdvertURL;
			}
			set
			{
				if ((this._HorisontalAdvertURL != value))
				{
					this.OnHorisontalAdvertURLChanging(value);
					this.SendPropertyChanging();
					this._HorisontalAdvertURL = value;
					this.SendPropertyChanged("HorisontalAdvertURL");
					this.OnHorisontalAdvertURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EBookURL", DbType="NVarChar(50)")]
		public string EBookURL
		{
			get
			{
				return this._EBookURL;
			}
			set
			{
				if ((this._EBookURL != value))
				{
					this.OnEBookURLChanging(value);
					this.SendPropertyChanging();
					this._EBookURL = value;
					this.SendPropertyChanged("EBookURL");
					this.OnEBookURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueId", DbType="Int NOT NULL")]
		public int IssueId
		{
			get
			{
				return this._IssueId;
			}
			set
			{
				if ((this._IssueId != value))
				{
					this.OnIssueIdChanging(value);
					this.SendPropertyChanging();
					this._IssueId = value;
					this.SendPropertyChanged("IssueId");
					this.OnIssueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationNumber", DbType="NVarChar(50)")]
		public string AccreditationNumber
		{
			get
			{
				return this._AccreditationNumber;
			}
			set
			{
				if ((this._AccreditationNumber != value))
				{
					this.OnAccreditationNumberChanging(value);
					this.SendPropertyChanging();
					this._AccreditationNumber = value;
					this.SendPropertyChanged("AccreditationNumber");
					this.OnAccreditationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMEPublication", DbType="NVarChar(200)")]
		public string CMEPublication
		{
			get
			{
				return this._CMEPublication;
			}
			set
			{
				if ((this._CMEPublication != value))
				{
					this.OnCMEPublicationChanging(value);
					this.SendPropertyChanging();
					this._CMEPublication = value;
					this.SendPropertyChanged("CMEPublication");
					this.OnCMEPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMEIssue", DbType="NVarChar(50)")]
		public string CMEIssue
		{
			get
			{
				return this._CMEIssue;
			}
			set
			{
				if ((this._CMEIssue != value))
				{
					this.OnCMEIssueChanging(value);
					this.SendPropertyChanging();
					this._CMEIssue = value;
					this.SendPropertyChanged("CMEIssue");
					this.OnCMEIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(80)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey2_Module", Storage="_Modules", ThisKey="SurveyId", OtherKey="SurveyId")]
		public EntitySet<Module> Modules
		{
			get
			{
				return this._Modules;
			}
			set
			{
				this._Modules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.Survey2 = this;
		}
		
		private void detach_Modules(Module entity)
		{
			this.SendPropertyChanging();
			entity.Survey2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleId;
		
		private string _Naam;
		
		private int _SurveyId;
		
		private int _NormalPoints;
		
		private int _EthicsPoints;
		
		private int _Passrate;
		
		private string _AdvertURL;
		
		private string _HorisontalAdvertURL;
		
		private string _EBookURL;
		
		private EntitySet<Article> _Articles;
		
		private EntityRef<Survey2> _Survey2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnSurveyIdChanging(int value);
    partial void OnSurveyIdChanged();
    partial void OnNormalPointsChanging(int value);
    partial void OnNormalPointsChanged();
    partial void OnEthicsPointsChanging(int value);
    partial void OnEthicsPointsChanged();
    partial void OnPassrateChanging(int value);
    partial void OnPassrateChanged();
    partial void OnAdvertURLChanging(string value);
    partial void OnAdvertURLChanged();
    partial void OnHorisontalAdvertURLChanging(string value);
    partial void OnHorisontalAdvertURLChanged();
    partial void OnEBookURLChanging(string value);
    partial void OnEBookURLChanged();
    #endregion
		
		public Module()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			this._Survey2 = default(EntityRef<Survey2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(150)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyId", DbType="Int NOT NULL")]
		public int SurveyId
		{
			get
			{
				return this._SurveyId;
			}
			set
			{
				if ((this._SurveyId != value))
				{
					if (this._Survey2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurveyIdChanging(value);
					this.SendPropertyChanging();
					this._SurveyId = value;
					this.SendPropertyChanged("SurveyId");
					this.OnSurveyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalPoints", DbType="Int NOT NULL")]
		public int NormalPoints
		{
			get
			{
				return this._NormalPoints;
			}
			set
			{
				if ((this._NormalPoints != value))
				{
					this.OnNormalPointsChanging(value);
					this.SendPropertyChanging();
					this._NormalPoints = value;
					this.SendPropertyChanged("NormalPoints");
					this.OnNormalPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthicsPoints", DbType="Int NOT NULL")]
		public int EthicsPoints
		{
			get
			{
				return this._EthicsPoints;
			}
			set
			{
				if ((this._EthicsPoints != value))
				{
					this.OnEthicsPointsChanging(value);
					this.SendPropertyChanging();
					this._EthicsPoints = value;
					this.SendPropertyChanged("EthicsPoints");
					this.OnEthicsPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passrate", DbType="Int NOT NULL")]
		public int Passrate
		{
			get
			{
				return this._Passrate;
			}
			set
			{
				if ((this._Passrate != value))
				{
					this.OnPassrateChanging(value);
					this.SendPropertyChanging();
					this._Passrate = value;
					this.SendPropertyChanged("Passrate");
					this.OnPassrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertURL", DbType="NVarChar(50)")]
		public string AdvertURL
		{
			get
			{
				return this._AdvertURL;
			}
			set
			{
				if ((this._AdvertURL != value))
				{
					this.OnAdvertURLChanging(value);
					this.SendPropertyChanging();
					this._AdvertURL = value;
					this.SendPropertyChanged("AdvertURL");
					this.OnAdvertURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HorisontalAdvertURL", DbType="NVarChar(50)")]
		public string HorisontalAdvertURL
		{
			get
			{
				return this._HorisontalAdvertURL;
			}
			set
			{
				if ((this._HorisontalAdvertURL != value))
				{
					this.OnHorisontalAdvertURLChanging(value);
					this.SendPropertyChanging();
					this._HorisontalAdvertURL = value;
					this.SendPropertyChanged("HorisontalAdvertURL");
					this.OnHorisontalAdvertURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EBookURL", DbType="NVarChar(100)")]
		public string EBookURL
		{
			get
			{
				return this._EBookURL;
			}
			set
			{
				if ((this._EBookURL != value))
				{
					this.OnEBookURLChanging(value);
					this.SendPropertyChanging();
					this._EBookURL = value;
					this.SendPropertyChanged("EBookURL");
					this.OnEBookURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Article", Storage="_Articles", ThisKey="ModuleId", OtherKey="ModuleId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey2_Module", Storage="_Survey2", ThisKey="SurveyId", OtherKey="SurveyId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Survey2 Survey2
		{
			get
			{
				return this._Survey2.Entity;
			}
			set
			{
				Survey2 previousValue = this._Survey2.Entity;
				if (((previousValue != value) 
							|| (this._Survey2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey2.Entity = null;
						previousValue.Modules.Remove(this);
					}
					this._Survey2.Entity = value;
					if ((value != null))
					{
						value.Modules.Add(this);
						this._SurveyId = value.SurveyId;
					}
					else
					{
						this._SurveyId = default(int);
					}
					this.SendPropertyChanged("Survey2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleId;
		
		private string _Naam;
		
		private int _ModuleId;
		
		private EntitySet<Question> _Questions;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    #endregion
		
		public Article()
		{
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="NVarChar(MAX)")]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Question", Storage="_Questions", ThisKey="ArticleId", OtherKey="ArticleId")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_Article", Storage="_Module", ThisKey="ModuleId", OtherKey="ModuleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ModuleId = value.ModuleId;
					}
					else
					{
						this._ModuleId = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionId;
		
		private string _Question1;
		
		private int _ArticleId;
		
		private System.Nullable<int> _NumberWithinArticle;
		
		private System.Nullable<int> _CorrectAnswer;
		
		private EntitySet<Answer> _Answers;
		
		private EntityRef<Article> _Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIdChanging(int value);
    partial void OnQuestionIdChanged();
    partial void OnQuestion1Changing(string value);
    partial void OnQuestion1Changed();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnNumberWithinArticleChanging(System.Nullable<int> value);
    partial void OnNumberWithinArticleChanged();
    partial void OnCorrectAnswerChanging(System.Nullable<int> value);
    partial void OnCorrectAnswerChanged();
    #endregion
		
		public Question()
		{
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					this.OnQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._QuestionId = value;
					this.SendPropertyChanged("QuestionId");
					this.OnQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Question", Storage="_Question1", DbType="NVarChar(800) NOT NULL", CanBeNull=false)]
		public string Question1
		{
			get
			{
				return this._Question1;
			}
			set
			{
				if ((this._Question1 != value))
				{
					this.OnQuestion1Changing(value);
					this.SendPropertyChanging();
					this._Question1 = value;
					this.SendPropertyChanged("Question1");
					this.OnQuestion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberWithinArticle", DbType="Int")]
		public System.Nullable<int> NumberWithinArticle
		{
			get
			{
				return this._NumberWithinArticle;
			}
			set
			{
				if ((this._NumberWithinArticle != value))
				{
					this.OnNumberWithinArticleChanging(value);
					this.SendPropertyChanging();
					this._NumberWithinArticle = value;
					this.SendPropertyChanged("NumberWithinArticle");
					this.OnNumberWithinArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="Int")]
		public System.Nullable<int> CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this.OnCorrectAnswerChanging(value);
					this.SendPropertyChanging();
					this._CorrectAnswer = value;
					this.SendPropertyChanged("CorrectAnswer");
					this.OnCorrectAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Answer", Storage="_Answers", ThisKey="QuestionId", OtherKey="QuestionId")]
		public EntitySet<Answer> Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Question", Storage="_Article", ThisKey="ArticleId", OtherKey="ArticleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._ArticleId = value.ArticleId;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Answer")]
	public partial class Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnswerId;
		
		private int _QuestionId;
		
		private string _Answer1;
		
		private bool _Correct;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerIdChanging(int value);
    partial void OnAnswerIdChanged();
    partial void OnQuestionIdChanging(int value);
    partial void OnQuestionIdChanged();
    partial void OnAnswer1Changing(string value);
    partial void OnAnswer1Changed();
    partial void OnCorrectChanging(bool value);
    partial void OnCorrectChanged();
    #endregion
		
		public Answer()
		{
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnswerId
		{
			get
			{
				return this._AnswerId;
			}
			set
			{
				if ((this._AnswerId != value))
				{
					this.OnAnswerIdChanging(value);
					this.SendPropertyChanging();
					this._AnswerId = value;
					this.SendPropertyChanged("AnswerId");
					this.OnAnswerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", DbType="Int NOT NULL")]
		public int QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._QuestionId = value;
					this.SendPropertyChanged("QuestionId");
					this.OnQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Answer", Storage="_Answer1", DbType="NVarChar(MAX)")]
		public string Answer1
		{
			get
			{
				return this._Answer1;
			}
			set
			{
				if ((this._Answer1 != value))
				{
					this.OnAnswer1Changing(value);
					this.SendPropertyChanging();
					this._Answer1 = value;
					this.SendPropertyChanged("Answer1");
					this.OnAnswer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correct", DbType="Bit NOT NULL")]
		public bool Correct
		{
			get
			{
				return this._Correct;
			}
			set
			{
				if ((this._Correct != value))
				{
					this.OnCorrectChanging(value);
					this.SendPropertyChanging();
					this._Correct = value;
					this.SendPropertyChanged("Correct");
					this.OnCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Answer", Storage="_Question", ThisKey="QuestionId", OtherKey="QuestionId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._QuestionId = value.QuestionId;
					}
					else
					{
						this._QuestionId = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
